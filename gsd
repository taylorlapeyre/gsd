#!/usr/bin/env ruby

if ENV['USER'] != 'root'
  puts "Please run gsd with sudo."
  exit
end

if `echo $OSTYPE`.include?("linux")
  $restart_command = `uname -a`.include?("arch") ? "echo > /dev/null" : "/etc/init.d/networking restart" 
elsif `echo $OSTYPE`.include?("darwin")
  $restart_command = "dscacheutil -flushcache"
end

$sites_file = "#{File.dirname(__FILE__)}/distraction_sites"
$start_token = "# START GSD"
$end_token   = "# END GSD"

FileUtils.touch("/etc/hosts") unless File.exists?("/etc/hosts")

def work
  File.open("/etc/hosts", "a+") do |hosts_file|
    lines = hosts_file.read

    if lines.include?($start_token)
      puts "Looks like you're already working!"
    else
      hosts_file.puts $start_token
      File.open($sites_file, "r+").each do |site|
        hosts_file.puts "127.0.0.1\t #{site.chomp}"
      end
      hosts_file.puts $end_token
      `#{$restart_command}`
    end
  end
end

def play
  File.open("/etc/hosts", "r+") do |hosts_file|
    if hosts_file.read.include?($start_token)
      hosts_file.rewind
      content = hosts_file.read.gsub(/# START GSD\n(.*\n)*# END GSD/, "")
      File.open(hosts_file, "w") { |file| file.puts content }
    else
      puts "Looks like you're already playing!"
    end
  end
end

def status
  File.open("/etc/hosts", "r+") do |hosts_file|
    if hosts_file.read.include?($start_token)
      puts "gsd is currently in 'work' mode"
    else
      puts "gsd is currently in 'play' mode"
    end
  end
end

case ARGV[0]
when nil
  puts "Usage: gsd (work|play|status)"
  puts "    work   -- block all sites in sites.ini"
  puts "    play   -- unblock all sites in sites.ini"
  puts "    status -- detect if sites are currently blocked or unblocked"
when "work"
  work
when "play"
  play
when "status"
  status
else
  puts "Unrecognized command. Run 'gsd' to see usage."
end
